@model OnlineStorePracticalWork.Models.Order

@{
    ViewBag.Title = "Оформление заказа";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Checkout", "Cart", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.MiddleName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Address, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Оформить заказ" class="btn btn-primary" />
        </div>
    </div>
}

<h3>Ваши товары:</h3>
<table class="table">
    <thead>
        <tr>
            <th>Изображение</th>
            <th>Название</th>
            <th>Количество</th>
            <th>Цена</th>
        </tr>
    </thead>
    <tbody>
        @for (var i = 0; i < Model.OrderDetails.Count(); i++)
        {
            var item = Model.OrderDetails.ToList()[i];
            <tr>
                <td>
                    <img src="@Url.Content(item.Product.ImagePath)" alt="Product Image" class="img-thumbnail" style="max-height: 50px;" />
                </td>
                <td>@item.Product.Name</td>
                <td>
                    <button type="button" class="btn btn-secondary btn-sm" onclick="updateQuantity(@item.ProductId, -1)">-</button>
                    <span id="quantity-@item.ProductId">@item.Quantity</span>
                    <button type="button" class="btn btn-secondary btn-sm" onclick="updateQuantity(@item.ProductId, 1)">+</button>
                    @Html.HiddenFor(m => m.OrderDetails.ToList()[i].Quantity)
                </td>
                <td>@item.Product.Price.ToString("C")</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function updateQuantity(productId, change) {
            var quantitySpan = document.getElementById("quantity-" + productId);
            var currentQuantity = parseInt(quantitySpan.innerText);
            var newQuantity = currentQuantity + change;

            if (newQuantity < 1) return; // Минимальное количество - 1

            // Проверяем наличие на складе
            fetch('/Cart/CheckStock?productId=' + productId + '&quantity=' + newQuantity)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        quantitySpan.innerText = newQuantity;
                        document.querySelector(`input[name="OrderDetails[${i}].Quantity"]`).value = newQuantity;
                    } else {
                        alert('Недостаточно товара на складе');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    </script>
}
